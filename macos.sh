#!/bin/zsh

echo "[macos.sh](info) let's get your Mac set up ðŸ”¥"

# ask for the administrator password upfront
sudo -v

# keep-alive: update existing `sudo` time stamp until `macos.sh` has finished
while true; do
  sudo -n true
  sleep 60
  kill -0 "$$" || exit
done 2>/dev/null &

# check if 'dotfiles' was cloned into the correct directory
if [ ! -d "${HOME}/Workspace/dotfiles" ]; then
  echo "[macos.sh](error) 'dotfiles' must be cloned into the '${HOME}/Workspace' directory"
  exit 1
fi

# install homebrew
if command -v brew &>/dev/null; then
  echo "[macos.sh](info) homebrew is already installed, skipping..."
else
  echo "[macos.sh](info) installing homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  echo "[macos.sh](info) finished installing homebrew"
fi

# install brew packages
echo "[macos.sh](info) installing brew packages..."
brew install autojump bat ffmpeg git gnupg httpie jq nmap ranger ripgrep \
  rsync wifi-password yt-dlp
echo "[macos.sh](info) finished installing brew packages"

# install brew casks
echo "[macos.sh](info) installing brew casks..."
brew install --cask arc 1password spotify sunsama slack loom zoom google-drive \
  figma exifcleaner audacity handbrake losslesscut \
  visual-studio-code docker insomnia \
  obsidian \
  the-unarchiver transmission veracrypt mac-mouse-fix flux rectangle cleanshot nightfall raycast cold-turkey-blocker pika \
  setapp
echo "[macos.sh](info) finished installing brew casks"

# install oh-my-zsh
# echo "[macos.sh](info) installing oh-my-zsh..."
# /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
zshrc = "${HOME}/.zshrc"
if [ -e "$zshrc" ]; then
  rm "$zshrc"
  echo "[macos.sh](info) removed default '.zshrc' generated by oh-my-zsh installation"
fi
echo "[macos.sh](info) finished installing oh-my-zsh"

# install NVM
echo "[macos.sh](info) installing NVM..."
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh)"
echo "[macos.sh](info) finished installing NVM"

# alias dotfiles
echo "[macos.sh](info) creating aliases for all dotfiles..."
ln -s "${HOME}/Workspace/dotfiles/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/Workspace/dotfiles/.vimrc" "${HOME}/.vimrc"
ln -s "${HOME}/Workspace/dotfiles/.gitconfig" "${HOME}/.gitconfig"
ln -s "${HOME}/Workspace/dotfiles/.ssh/config" "${HOME}/.ssh/config"
echo "[macos.sh](info) finished creating aliases for all dotfiles"

# clone and alias scripts
echo "[macos.sh](info) cloning and aliasing user scripts..."
git clone git@github.com:richardszegh/scripts.git ${HOME}/Workspace/scripts
chmod +x ${HOME}/Workspace/scripts/*
source ${HOME}/.zshrc
echo "[macos.sh](info) finished cloning and aliasing user scripts"

echo "[macos.sh](info) successfully set up your Mac ðŸš€"
echo "-"
echo "[macos.sh](warn) Note: the following apps must be installed manually:"
echo "[macos.sh](warn)   - Fantastical"
echo "[macos.sh](warn)   - DaVinci Resolve"
echo "[macos.sh](warn)   - Kitty"
echo "[macos.sh](warn)   - Bezel"
echo "[macos.sh](warn)   - Telegram, WhatsApp etc."
echo "[macos.sh](warn)   - Infuse"
echo "[macos.sh](warn)   - Amphetamine"
echo "[macos.sh](warn)   - Toggl Track"
echo "[macos.sh](warn)   - Grammarly"
echo "[macos.sh](warn)   - Your apps in Setapp"
echo "[macos.sh](warn)   - Drivers (Logitech etc.)"
echo "[macos.sh](warn)   - VPN, Jellyfin"
echo "[macos.sh](warn)   - Browser Extensions: 1Password, Clickbait Remover for Youtube, Cold Turkey Blocker, Disable Automatic Gain Control, Fake Filler, Hide YouTube Thumbnails, I still don't care about cookies, Kagi Search, News Feed Eridicator, React Developer Tools, Readwise, uBlock Origin, Unhook, Universal Trakt Scrollber"
echo "-"
echo "[macos.sh](warn) Optional:"
echo "[macos.sh](warn)   - install programming fonts"
echo "[macos.sh](warn)   - install apps & tools from Gumroad (https://app.gumroad.com/library)"
echo "-"
echo "[macos.sh](warn) please restart your computer!"
